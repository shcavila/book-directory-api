# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  access_token: String!
}

type AuthorResponse {
  first_name: String!
  id: ID!
  last_name: String!
  middle_name: String!
}

type BookResponse {
  author: AuthorResponse!
  authorId: ID
  genre: GenreResponse!
  genreId: ID
  id: ID!
  imageLink: String
  pages: Int!
  title: String!
  year: Int!
}

input CreateAuthorInput {
  first_name: String!
  last_name: String!
  middle_name: String
}

input CreateBookInput {
  authorId: ID
  genreId: ID
  imageLink: String
  pages: Int!
  title: String!
  year: Int!
}

input CreateGenreInput {
  description: String!
  name: String!
}

type GenreResponse {
  description: String!
  id: ID!
  name: String!
}

type Mutation {
  createAuthor(createAuthorInput: CreateAuthorInput!): AuthorResponse!
  createBook(createBookInput: CreateBookInput!): BookResponse!
  createGenre(createGenreInput: CreateGenreInput!): GenreResponse!
  deleteAllAuthor: Int!
  deleteAllBook: Int!
  deleteAuthor(id: ID!): AuthorResponse!
  deleteBook(id: ID!): BookResponse!
  removeGenre(id: ID!): GenreResponse!
  updateAuthor(updateAuthorInput: UpdateAuthorInput!): AuthorResponse!
  updateBook(updateBookInput: UpdateBookInput!): BookResponse!
  updateGenre(updateGenreInput: UpdateGenreInput!): GenreResponse!
}

type Query {
  auth(email: String!, password: String!): Auth!
  author(id: ID!): AuthorResponse!
  book(id: ID!): BookResponse!
  books: [BookResponse!]!
  genre(id: Int!): GenreResponse!
  users(search: UserFilter): [UsersResponse!]!
}

input UpdateAuthorInput {
  first_name: String
  id: ID!
  last_name: String
  middle_name: String
}

input UpdateBookInput {
  authorId: ID
  genreId: ID
  id: ID!
  imageLink: String
  pages: Int
  title: String
  year: Int
}

input UpdateGenreInput {
  description: String
  id: ID!
  name: String
}

type UserFields {
  email: String!
  first_name: String!
  id: String!
  last_name: String!
  password: String!
}

input UserFilter {
  filter: UserFilterInput
}

input UserFilterInput {
  email: String
  first_name: String
  last_name: String
  password: String
}

type UsersResponse {
  data: [UserFields!]!
  message: String!
}